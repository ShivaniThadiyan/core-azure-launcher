{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterType": {
            "type": "String",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Choose Wheather you want to deploy on an existing AKS Cluster or on provision a new cluster."
            }
        },
        "aksClusterName": {
            "type": "String",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "dnsPrefix": {
            "type": "String",
            "defaultValue": "cbcore",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "aksAgentCount": {
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 50,
            "type": "Int",
            "metadata": {
                "description": "The number of nodes for the cluster."
            }
        },
        "agentVMSize": {
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS13",
                "Standard_DS13_v2",
                "Standard_DS14",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F8",
                "Standard_F8s",
                "Standard_G1",
                "Standard_G2",
                "Standard_NC6",
                "Standard_NC12",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_B1s",
                "Standard_B1ms",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_B8ms"
            ],
            "type": "String",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "servicePrincipalClientId": {
            "defaultValue": "n/a",
            "type": "SecureString",
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            }
        },
        "servicePrincipalClientSecret": {
            "defaultValue": "n/a",
            "type": "SecureString",
            "metadata": {
                "description": "The Service Principal Client Secret."
            }
        }, 
        
        "location": {
            "defaultValue": "n/a",
            "type": "string",
            "metadata": {
                "description": "resources location."
            }
        }, 
        "enableAksRBAC": {
            "defaultValue": "false",
            "type": "bool",
            "allowedValues": [
                "true",
                "false"
            ],
            "type": "String",
            "metadata": {
                "description": "Kubernetes Role Based Access Control"
            }
        },
         "kubernetesVersion": {
            "defaultValue": "1.11.2",
            "allowedValues": [
                "1.11.2",
                "1.10.6",
                "1.9.9"
            ],
            "type": "String",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        }
        
    },
    "variables": {
        "linuxAdminUsername": "azureuser",
        "sshRSAPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAnU4hz3XXS1jzV4m7oPmAWFPmLkWzNIshUOyThQUPmjy7OTzXNcMDLFo7UDF52iXCFc5TN0S8+GjsQjyWv4HPH2efm/4NzZ5N8EUunjumTPMpn6skobkorRJXZwmoc/so1K+kA3R9U3g9s0kvBmlyFTDn/CX0Zk9VJalLcsRe3uPL7u4z1qF+UQMG72h10zz3ZZ+zyAaZpv0hkPnbiq/VIn+OZDSG4jzQtOKF5H0lsCoHMaRtfbD1udz9nL/L2m2vdg41QEw212429is0h31c24VFfTTKt76pwkgURNXUzc2/QENmYt+OeveXaAgAD3cvG39AWRBAzxPpjsL8325Cuw== amit-sshkey-12142017",
        "enableHttpApplicationRouting": false,
        "enableRBAC": false,
        "networkPlugin": "kubenet",
        "TFRPlocation": "westcentralus",
        "osType": "Linux",
        "osDiskSizeGB": 50,
        "aksClusterName": "[parameters('aksClusterName')]",
        "agentVMSize": "[parameters('agentVMSize')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
        "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "tenantid": "[subscription().tenantId]",
        "cjocdnsprefix": "cjoc"
    },
    "resources": [{
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "[variables('aksClusterName')]",
            "condition": "[equals(parameters('clusterType'),'new')]",
            "apiVersion": "2018-03-31",
            "location": "[parameters('location')]",
            "properties": {
                "kubernetesVersion": "[variables('kubernetesVersion')]",
                "enableRBAC": "[variables('enableRBAC')]",
                "dnsPrefix": "[variables('dnsPrefix')]",
                "addonProfiles": {
                "httpApplicationRouting": {
                    "enabled": "[variables('enableHttpApplicationRouting')]"
                }
            },
                "agentPoolProfiles": [{
                    "name": "agentpool",
                    "osDiskSizeGB": "[variables('osDiskSizeGB')]",
                    "count": "[parameters('aksAgentCount')]",
                    "vmSize": "[variables('agentVMSize')]",
                    "osType": "[variables('osType')]",
                    "storageProfile": "ManagedDisks"
                }],
                "linuxProfile": {
                    "adminUsername": "[variables('linuxAdminUsername')]",
                    "ssh": {
                        "publicKeys": [
                            {
                                "keyData": "[variables('sshRSAPublicKey')]"
                            }
                        ]
                    }
                },
                "servicePrincipalProfile": {
                    "ClientId": "[parameters('servicePrincipalClientId')]",
                    "Secret": "[parameters('servicePrincipalClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "[variables('networkPlugin')]"
                }
            }
        },
        {
            "name": "coreBootstrapContainerexistingaks",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "condition": "[equals(parameters('clusterType'),'existing')]",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
              "containers": [
                {
                  "name": "corebootstrap",
                  "properties": {
                    "image": "amitmalik/corebootstrap:latest",
                    "environmentVariables": [
                        {
                          "name": "cfg",
                          "value": "[ListCredential(resourceId('Microsoft.ContainerService/managedClusters/accessProfiles', parameters('aksClusterName'),'clusterAdmin'), '2017-08-31').properties.kubeConfig]"
                        }
                      ],
                    "resources": {
                      "requests": {
                        "cpu": 0.5,
                        "memoryInGb": 0.5
                        }
                    }  
                }
            }
              ],
              "osType": "Linux"
            }
          },
          {
            "name": "coreBootstrapContainer",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "condition": "[equals(parameters('clusterType'),'new')]",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksClusterName'))]"
            ],
            "properties": {
              "containers": [
                {
                  "name": "corebootstrap",
                  "properties": {
                    "image": "amitmalik/corebootstrapaci",
                    "environmentVariables": [
                        {
                          "name": "spnappid",
                          "value": "[variables('servicePrincipalClientId')]"
                        },
                        {
                          "name": "spnapppassword",
                          "value": "[variables('servicePrincipalClientSecret')]"
                        },
                        {
                          "name": "spntenantid",
                          "value": "[variables('tenantid')]"
                        },
                        {
                          "name": "rgname",
                          "value": "[resourceGroup().name]"
                        },
                        {
                          "name": "k8name",
                          "value": "[variables('aksClusterName')]"
                        },
                        {
                          "name": "cjedns",
                          "value": "[variables('cjocdnsprefix')]"
                        }
                      ],
                    "resources": {
                      "requests": {
                        "cpu": 0.5,
                        "memoryInGb": 0.5
                        }
                    }  
                }
            }
              ],
              "osType": "Linux"
            }
          }
    ]
}
